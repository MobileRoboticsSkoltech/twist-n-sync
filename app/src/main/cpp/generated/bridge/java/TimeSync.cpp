// Generated by Scapix Language Bridge
// https://www.scapix.com

#include <scapix/bridge/java/init.h>
#include <TimeSync.h>

namespace scapix {
namespace link {
namespace java {

template <>
struct class_name<TimeSync>
{
	using type = SCAPIX_META_STRING("com/googleresearch/capturesync/softwaresync/TimeSync");
};

} // namespace java
} // namespace link
} // namespace scapix

void scapix_java_export_TimeSync()
{
	scapix::link::java::native_methods
	<
		scapix::link::java::class_name_t<TimeSync>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("_init"),
			void(scapix::link::java::ref<scapix::link::java::array<scapix::link::java::array<jdouble>>>, scapix::link::java::ref<scapix::link::java::array<scapix::link::java::array<jdouble>>>, scapix::link::java::ref<scapix::link::java::array<jdouble>>, scapix::link::java::ref<scapix::link::java::array<jdouble>>, jboolean),
			void(scapix::bridge::java::init<TimeSync>::*)(const std::vector<std::vector<double>> &, const std::vector<std::vector<double>> &, const std::vector<double> &, const std::vector<double> &, const bool &),
			&scapix::bridge::java::init<TimeSync>::create
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("obtainDelay"),
			void(),
			void(TimeSync::*)(),
			&TimeSync::obtainDelay
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("resample"),
			void(jdouble),
			void(TimeSync::*)(const double &),
			&TimeSync::resample
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("getTimeDelay"),
			jdouble(),
			double(TimeSync::*)() const,
			&TimeSync::getTimeDelay
		>
	>::register_();
}
